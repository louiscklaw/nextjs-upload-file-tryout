"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[36476],{97112:i=>{i.exports=JSON.parse('{"label":"ios","permalink":"/nextjs-upload-file-tryout/zh-Hans/tags/ios","allTagsPath":"/nextjs-upload-file-tryout/zh-Hans/tags","count":24,"items":[{"id":"workflows/ios-specific-workflow-steps/appcenter-ios-distribution","title":"App Center iOS Distribution","description":"Distribute your iOS app to App Center for testing and distribution. `Prerequisite:` Xcodebuild for Devices step.","permalink":"/nextjs-upload-file-tryout/zh-Hans/workflows/ios-specific-workflow-steps/appcenter-ios-distribution"},{"id":"workflows/ios-specific-workflow-steps/appdome-build-to-secure-for-ios","title":"Appdome Build-2Secure for iOS","description":"Automate mobile app security with Appdome Build-2Secure for iOS. Enhance security without manual coding or code analysis.","permalink":"/nextjs-upload-file-tryout/zh-Hans/workflows/ios-specific-workflow-steps/appdome-build-to-secure-for-ios"},{"id":"workflows/common-workflow-steps/aws-device-farm-and-deploy","title":"AWS Device Farm and Deploy","description":"AWS Device Farm is an application testing service that enables you to run your tests concurrently on multiple mobile devices to speed up the execution of your tests and generates videos and logs to help you quickly identify issues with your app.","permalink":"/nextjs-upload-file-tryout/zh-Hans/workflows/common-workflow-steps/aws-device-farm-and-deploy"},{"id":"workflows/ios-specific-workflow-steps/azure-bot-for-swiftlint","title":"Azure Bot for Swiftlint","description":"Integrate Azure DevOps Bot with SwiftLint to analyze and report details under PRs. Automate builds with configured triggers.","permalink":"/nextjs-upload-file-tryout/zh-Hans/workflows/ios-specific-workflow-steps/azure-bot-for-swiftlint"},{"id":"build/platform-build-guides/building-ios-applications","title":"Building iOS Applications","description":"Building iOS applications may be complex and confusing. Appcircle will help you smooth the process and doesn\'t require any additional configuration files from you.","permalink":"/nextjs-upload-file-tryout/zh-Hans/build/platform-build-guides/building-ios-applications"},{"id":"workflows/ios-specific-workflow-steps/carthage","title":"Carthage","description":"Appcircle supports Carthage for dependency management in iOS projects.","permalink":"/nextjs-upload-file-tryout/zh-Hans/workflows/ios-specific-workflow-steps/carthage"},{"id":"workflows/ios-specific-workflow-steps/firebase-upload-dsym","title":"Firebase Upload dSYM","description":"Upload your debug symbols to Firebase Crashlytics with Appcircle. Streamline your iOS app development and debugging processes.","permalink":"/nextjs-upload-file-tryout/zh-Hans/workflows/ios-specific-workflow-steps/firebase-upload-dsym"},{"id":"workflows/common-workflow-steps/fod-mobile-assesment","title":"Fortify on Demand Mobile Assessment","description":"Optimize mobile app security with Fortify on Demand Mobile Assessment. Comprehensive testing for robust, secure mobile applications.","permalink":"/nextjs-upload-file-tryout/zh-Hans/workflows/common-workflow-steps/fod-mobile-assesment"},{"id":"troubleshooting-faq/common-issues","title":"General Troubleshooting","description":"General troubleshooting guide for common issues in Appcircle","permalink":"/nextjs-upload-file-tryout/zh-Hans/troubleshooting-faq/common-issues"},{"id":"workflows/ios-specific-workflow-steps/install-certificates-provisions","title":"Install Certificates and Provisioning Profiles","description":"Learn how to install certificates and provisioning profiles for iOS distribution in Appcircle.","permalink":"/nextjs-upload-file-tryout/zh-Hans/workflows/ios-specific-workflow-steps/install-certificates-provisions"},{"id":"infrastructure/ios-build-infrastructure","title":"iOS Build Stacks","description":"Learn about the iOS build stacks in Appcircle","permalink":"/nextjs-upload-file-tryout/zh-Hans/infrastructure/ios-build-infrastructure"},{"id":"config-management/platform-specific-usage/using-environment-variables-in-ios-projects","title":"iOS Builds","description":"Learn how to use environment variables in iOS projects in Appcircle","permalink":"/nextjs-upload-file-tryout/zh-Hans/config-management/platform-specific-usage/using-environment-variables-in-ios-projects"},{"id":"environment-variables/platform-specific-usage/using-environment-variables-in-ios-projects","title":"iOS Builds","description":"Learn how to use environment variables in iOS projects in Appcircle","permalink":"/nextjs-upload-file-tryout/zh-Hans/environment-variables/platform-specific-usage/using-environment-variables-in-ios-projects"},{"id":"workflows/ios-specific-workflow-steps/ios-increment-build-and-version-number","title":"iOS Increment Build and Version Number","description":"Learn how to increment the version code and version name of an iOS application in Appcircle","permalink":"/nextjs-upload-file-tryout/zh-Hans/workflows/ios-specific-workflow-steps/ios-increment-build-and-version-number"},{"id":"workflows/ios-specific-workflow-steps/index","title":"iOS Specific Workflow Steps","description":"Dive into iOS-specific workflow steps for building profiles. Access our workflow marketplace for a comprehensive list.","permalink":"/nextjs-upload-file-tryout/zh-Hans/workflows/ios-specific-workflow-steps/"},{"id":"continuous-testing/ios-testing/running-ios-unit-and-ui-tests","title":"Running Unit & UI Tests","description":"Easily run Unit and UI tests for your iOS applications during builds. Improve app quality with Appcircle\'s testing features.","permalink":"/nextjs-upload-file-tryout/zh-Hans/continuous-testing/ios-testing/running-ios-unit-and-ui-tests"},{"id":"workflows/ios-specific-workflow-steps/slather","title":"Slather","description":"Use Slather to convert Xcode\'s test results into various formats. Prerequisites include Xcodebuild for Tests and Git Clone.","permalink":"/nextjs-upload-file-tryout/zh-Hans/workflows/ios-specific-workflow-steps/slather"},{"id":"workflows/ios-specific-workflow-steps/swiftlint","title":"SwiftLint","description":"Improve your code with SwiftLint, a tool for identifying programmatic and stylistic errors. Prerequisites include Git Clone and Cocoapods Install.","permalink":"/nextjs-upload-file-tryout/zh-Hans/workflows/ios-specific-workflow-steps/swiftlint"},{"id":"versioning/ios-version","title":"Understanding iOS Versioning","description":"Learn how to manage versioning for iOS applications in Appcircle","permalink":"/nextjs-upload-file-tryout/zh-Hans/versioning/ios-version"},{"id":"versioning/index","title":"Versioning \u7248\u672c\u63a7\u5236","description":"Understand and manage versioning for Android and iOS applications","permalink":"/nextjs-upload-file-tryout/zh-Hans/versioning/"},{"id":"workflows/ios-specific-workflow-steps/xcodebuild-for-devices","title":"Xcodebuild for Devices (Archive & Export)","description":"Learn to build iOS apps for ARM devices with Xcodebuild. Essential for Sharing With Testers feature and iOS distribution","permalink":"/nextjs-upload-file-tryout/zh-Hans/workflows/ios-specific-workflow-steps/xcodebuild-for-devices"},{"id":"workflows/ios-specific-workflow-steps/xcodebuild-for-ios-simulator","title":"Xcodebuild for iOS Simulator","description":"Build your iOS app for the Simulator with Xcodebuild. Creates an unsigned xarchive file.","permalink":"/nextjs-upload-file-tryout/zh-Hans/workflows/ios-specific-workflow-steps/xcodebuild-for-ios-simulator"},{"id":"workflows/ios-specific-workflow-steps/xcodebuild-for-testing","title":"Xcodebuild for Testing","description":"Build your app with Xcodebuild for Testing. Generate an IPA for use in test automation frameworks like BrowserStack or Testinium.\\"","permalink":"/nextjs-upload-file-tryout/zh-Hans/workflows/ios-specific-workflow-steps/xcodebuild-for-testing"},{"id":"workflows/ios-specific-workflow-steps/xcodebuild-for-unit-and-ui-test","title":"Xcodebuild for Unit and UI Testing","description":"This step performs unit and UI tests for your iOS applications. This does not \\"build\\" your app, but uses the \\"xcodebuild\\" command to run tests.","permalink":"/nextjs-upload-file-tryout/zh-Hans/workflows/ios-specific-workflow-steps/xcodebuild-for-unit-and-ui-test"}],"unlisted":false}')}}]);