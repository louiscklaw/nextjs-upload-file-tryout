"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[69253],{28629:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var n=i(74848),o=i(28453);const s={title:"Structure",description:"Get familiar with the Build History Report in Appcircle, tracking build sessions initiated over a specific time period.",tags:["reports","build history","build sessions","testing"],sidebar_position:3},a=void 0,r={id:"Product_Requirements_Document/Structure/index",title:"Structure",description:"Get familiar with the Build History Report in Appcircle, tracking build sessions initiated over a specific time period.",source:"@site/docs/001_Product_Requirements_Document/03_Structure/index.md",sourceDirName:"001_Product_Requirements_Document/03_Structure",slug:"/Product_Requirements_Document/Structure/",permalink:"/nextjs-upload-file-tryout/zh-Hans/Product_Requirements_Document/Structure/",draft:!1,unlisted:!1,editUrl:"https://github.com/appcircleio/appcircle-docusaurus/tree/master/docs/001_Product_Requirements_Document/03_Structure/index.md",tags:[{label:"reports",permalink:"/nextjs-upload-file-tryout/zh-Hans/tags/reports"},{label:"build history",permalink:"/nextjs-upload-file-tryout/zh-Hans/tags/build-history"},{label:"build sessions",permalink:"/nextjs-upload-file-tryout/zh-Hans/tags/build-sessions"},{label:"testing",permalink:"/nextjs-upload-file-tryout/zh-Hans/tags/testing"}],version:"current",sidebarPosition:3,frontMatter:{title:"Structure",description:"Get familiar with the Build History Report in Appcircle, tracking build sessions initiated over a specific time period.",tags:["reports","build history","build sessions","testing"],sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"wetransfer.com",permalink:"/nextjs-upload-file-tryout/zh-Hans/Product_Requirements_Document/Competitor Analysis/wetransfer_com"},next:{title:"\u7528\u6237\u64cd\u4f5c\u4e3b\u6d41\u7a0b(\u7b14\u8bb0\u7bc7)",permalink:"/nextjs-upload-file-tryout/zh-Hans/Product_Requirements_Document/user_flow"}},l={},d=[{value:"3.1 product page structure",id:"31-product-page-structure",level:3},{value:"Main component/Page",id:"main-componentpage",level:4},{value:"3.2 system architecture",id:"32-system-architecture",level:3}];function u(e){const t={admonition:"admonition",code:"code",h3:"h3",h4:"h4",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components},{Screenshot:i}=t;return i||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Screenshot",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"31-product-page-structure",children:"3.1 product page structure"}),"\n",(0,n.jsx)(t.mermaid,{value:"graph LR\n  F(Entry point defined by link) --\x3e D\n  F --\x3e A\n  D(Visitor with file ID) --\x3e E(Download File Page)\n  A(Upload Page) --\x3e B(Upload success)\n  A --\x3e C(Upload Failed)"}),"\n",(0,n.jsx)(t.h4,{id:"main-componentpage",children:"Main component/Page"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Landing Page:"}),"\n",(0,n.jsx)(t.p,{children:'This is the first page visitors will see when they access your web app. It should include a clear and concise description of the app\'s purpose, such as "Upload your file and get a unique ID for easy access." The page should also have a form to upload new files, with a clear "Upload" button.'}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Visitor with File ID:"}),"\n",(0,n.jsx)(t.p,{children:'When a visitor has a file ID, they can enter it in a field on the landing page. After submitting the ID, the app will validate it and then redirect the visitor to the file download page, where they can access their uploaded file. The file download page should include a clear "Download" button and a message that displays the file name and unique ID for confirmation.'}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Download File Page:"}),"\n",(0,n.jsx)(t.p,{children:'This page allows users to download their uploaded files using a unique file ID. The page should have a form to input the file ID, with a clear "Download" button. After submitting the ID, the app will validate it and then redirect the user to the actual file download. The file download page should include a clear message that the file is being prepared for download and a progress bar to indicate the status.'}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Upload Page:"}),"\n",(0,n.jsx)(t.p,{children:'This page allows users to upload new files to the web app. The page should include a clear and concise description of the upload process, such as "Choose a file to upload and get a unique ID for easy access." The page should also have a form to select and upload new files, with a clear "Upload" button. After uploading, the app will generate a unique file ID and display it to the user for future reference.'}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Upload Success Page:"}),"\n",(0,n.jsx)(t.p,{children:'This page is displayed to the user after a successful file upload. It should include a clear message that the file has been uploaded, such as "Your file has been uploaded successfully!" The page should also display the unique file ID for reference, and provide a link to the download page. Additionally, it could include a "Upload another file" button to make it easy for the user to upload more files.'}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Upload Failed Page:"}),"\n",(0,n.jsx)(t.p,{children:'This page is displayed to the user when there is an error during the file upload process. It should include a clear message that the file upload has failed, such as "There was an error uploading your file." The page should also provide information about the error, such as "The file is too large" or "The file type is not supported." Additionally, it could include a link to the upload page to allow the user to try again.'}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"32-system-architecture",children:"3.2 system architecture"}),"\n",(0,n.jsx)(i,{url:"../../img/posts/docker_block_diagram.png",description:"product structure of my project"}),"\n",(0,n.jsx)(t.p,{children:"This report is accessible from the Build module."}),"\n",(0,n.jsx)(t.p,{children:"Build History Report contains the list of build sessions initiated in a given time period."}),"\n",(0,n.jsx)(t.p,{children:"Each build session is defined as an initiated manual or automatic build for a commit under a branch of a build profile."}),"\n",(0,n.jsx)(t.p,{children:"The duration indicates the minutes spent by the build agent for the specified build operation. This value only includes the actual duration that the agent was active, including the agent boot duration but excluding the queue wait duration.;"}),"\n",(0,n.jsx)(t.p,{children:"The date and time are displayed in the current timezone."}),"\n",(0,n.jsx)(t.p,{children:"You can filter the report pages according to the organization."}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsx)(t.p,{children:"In the filtering options, you can only view and select the organization and sub-organization you belong to."})}),"\n",(0,n.jsx)(i,{url:"https://cdn.appcircle.io/docs/assets/build-history-new.png"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{})})]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>r});var n=i(96540);const o={},s=n.createContext(o);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);